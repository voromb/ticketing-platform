generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Approval {
  id          String   @id @default(uuid())
  service     String   // TRAVEL, RESTAURANT, MERCHANDISING
  entityId    String   // ID del viaje/restaurante/producto
  entityType  String   // Trip, Restaurant, Product
  requestedBy String   // ID del usuario que solicita
  requestedAt DateTime @default(now())
  
  status      String   @default("PENDING") // PENDING, APPROVED, REJECTED
  decidedBy   String?  // ID del admin que aprueba/rechaza
  decidedAt   DateTime?
  reason      String?  // Raz√≥n de rechazo
  
  priority    String   @default("MEDIUM") // LOW, MEDIUM, HIGH
  metadata    Json?    // Datos adicionales
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@index([status])
  @@index([service])
}

// ==================== COMPANY MANAGEMENT ====================

model Company {
  id              String         @id @default(uuid())
  name            String
  type            CompanyType
  region          CompanyRegion
  description     String?
  contactEmail    String
  contactPhone    String?
  address         String?
  taxId           String?
  
  requiresApprovalForCreate  Boolean @default(true)
  requiresApprovalForDelete  Boolean @default(true)
  
  isActive        Boolean        @default(true)
  companyAdmins   CompanyAdmin[]
  
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  
  @@unique([type, region])
  @@index([type])
  @@index([region])
  @@index([isActive])
  @@map("companies")
}

model CompanyAdmin {
  id              String    @id @default(uuid())
  email           String    @unique
  password        String
  firstName       String
  lastName        String
  phone           String?
  
  companyId       String
  company         Company   @relation(fields: [companyId], references: [id], onDelete: Cascade)
  
  canCreate       Boolean   @default(true)
  canUpdate       Boolean   @default(true)
  canDelete       Boolean   @default(false)
  canViewStats    Boolean   @default(true)
  canManageStock  Boolean   @default(true)
  
  isActive        Boolean   @default(true)
  lastLogin       DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  
  @@index([email])
  @@index([companyId])
  @@index([isActive])
  @@map("company_admins")
}

enum CompanyType {
  RESTAURANT
  TRAVEL
  MERCHANDISING
}

enum CompanyRegion {
  SPAIN
  EUROPE
  AMERICA
  ASIA
  AFRICA
  OCEANIA
}